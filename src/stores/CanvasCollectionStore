import { computed, observable, action } from "mobx";
import { NodeStore } from "./NodeStore";
import { observer } from "mobx-react";
import * as React from 'react';
import { ArcherContainer, ArcherElement } from 'react-archer';
import { CanvasNodeStore } from "./CanvasNodeStore";

/**
 * This acts as a wrapper component for two arrays, one for unselected nodes and one for selected nodes
 */
export class CanvasCollectionStore extends CanvasNodeStore {

    @observable
    public canvasNodes: CanvasNodeStore[] = new Array<CanvasNodeStore>();

    @action
    public findRenderedNode = () => {
        this.canvasNodes.forEach((canvasNode) =>
        {if (canvasNode.isRenderedNode) return canvasNode})
    }

}